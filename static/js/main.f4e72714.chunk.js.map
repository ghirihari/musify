{"version":3,"sources":["audio/1.mp3","audio/2.mp3","audio/3.mp3","audio/4.mp3","audio/5.mp3","audio/6.mp3","audio/7.m4a","audio/8.mp3","audio/9.mp3","audio/10.mp3","config/fire.js","SongTile.js","Home.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","SongTile","props","playAudio","bind","state","min","sec","current","playing","icon","btnColor","audioEl","this","document","getElementsByClassName","id","console","log","duration","pause","setState","play","parseInt","setInterval","currentTime","className","Col","xs","lg","song_name","song_artist","src","song_data","onClick","Component","Home","logout","select","song","click","menu","artist","artist_songs","songs","song0","song1","song2","song3","song4","song5","song6","song7","song8","song9","title","fetch","then","data","json","users","auth","signOut","item","map","value","index","push","unique","distinct","i","length","Navbar","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","Nav","Link","show","val","ind","Login","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","EmailAuthProvider","callbacks","signInSuccess","login","handleChange","signup","signedin","e","target","name","preventDefault","email","querySelector","pass","signInWithEmailAndPassword","u","catch","error","createUserWithEmailAndPassword","Form","FormGroup","Input","type","placeholder","firebaseAuth","App","user","authListener","onAuthStateChanged","localStorage","setItem","uid","removeItem","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f4e72714.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.686d09a7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/2.4cded3ba.mp3\";","module.exports = __webpack_public_path__ + \"static/media/3.b41aae94.mp3\";","module.exports = __webpack_public_path__ + \"static/media/4.cfe7308e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/5.be97d4ed.mp3\";","module.exports = __webpack_public_path__ + \"static/media/6.e094f132.mp3\";","module.exports = __webpack_public_path__ + \"static/media/7.48238397.m4a\";","module.exports = __webpack_public_path__ + \"static/media/8.7a4e6ed8.mp3\";","module.exports = __webpack_public_path__ + \"static/media/9.da6d6a40.mp3\";","module.exports = __webpack_public_path__ + \"static/media/10.5aac6582.mp3\";","import firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyA05o3Bzh32A5QEHArh5VyTiNcGuh5dxCk\",\r\n    authDomain: \"musify-ghiri.firebaseapp.com\",\r\n    databaseURL: \"https://musify-ghiri.firebaseio.com\",\r\n    projectId: \"musify-ghiri\",\r\n    storageBucket: \"musify-ghiri.appspot.com\",\r\n    messagingSenderId: \"624179241757\",\r\n    appId: \"1:624179241757:web:d7f67870beefa78abab7f4\",\r\n    measurementId: \"G-8HJNE36X0L\"\r\n  };\r\n  \r\n firebase.initializeApp(firebaseConfig);\r\n export default firebase;\r\n","import React, { Component } from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nclass SongTile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.playAudio = this.playAudio.bind(this);\r\n        \r\n        this.state\r\n        = { \r\n             min: 0 ,\r\n             sec: 0 ,\r\n             current: 0,\r\n             playing: false,\r\n             icon: 'fa fa-play',\r\n             btnColor : 'btn-lg btn-block btn-primary',\r\n         }; \r\n         this.audioEl = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.audioEl = document.getElementsByClassName(\"audio-element\")[this.props.id];\r\n        console.log(this.audioEl.duration);\r\n        \r\n    }\r\n\r\n    playAudio() {\r\n        if(!this.state.playing)\r\n        {\r\n            this.audioEl.play();\r\n            this.setState({playing:true})\r\n            this.setState({icon:'fa fa-pause'}) \r\n            this.setState({btnColor:'btn-lg btn-block btn-warning'}) \r\n        }\r\n        else{\r\n            this.audioEl.pause();\r\n            this.setState({playing:false})\r\n            this.setState({icon:'fa fa-play'})\r\n            this.setState({btnColor:'btn-lg btn-block btn-primary'})\r\n        }\r\n \r\n        this.setState({min: parseInt(this.audioEl.duration/60), sec: parseInt(this.audioEl.duration%60),  }) ;\r\n        console.log();\r\n        setInterval(() => this.setState({current: parseInt(this.audioEl.currentTime)}),1000);\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"row tile\">   \r\n                <Col xs=\"5\" lg=\"6\">   \r\n                    <label className=\"songTitle\">{this.props.song_name}</label><br></br>\r\n                    <label className=\"songArtist\">{this.props.song_artist}</label>\r\n                </Col>\r\n                <Col xs=\"4\" lg=\"4\">     \r\n                    <audio className=\"audio-element\">\r\n                            <source src={this.props.song_data}></source>\r\n                    </audio>\r\n                        <div className=\"timer\">\r\n                                <label className=\"duration\" id=\"duration\"> 00:{this.state.current} - {this.state.min}:{this.state.sec}</label>\r\n                        </div>\r\n                </Col>\r\n                <Col xs=\"3\" lg=\"2\">\r\n                            <div className=\" p-1\">\r\n                                <button id=\"play\" className={this.state.btnColor} onClick={this.playAudio}>\r\n                                    <i  id=\"playIcon\" className={this.state.icon}></i>\r\n                                </button>\r\n                        </div>\r\n                </Col>\r\n            </div>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nexport default SongTile;","import React, { Component } from 'react';\r\nimport firebase from './config/fire';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Col from 'react-bootstrap/Col';\r\nimport SongTile from './SongTile';\r\n\r\nimport song0 from './audio/1.mp3';\r\nimport song1 from './audio/2.mp3';\r\nimport song2 from './audio/3.mp3';\r\nimport song3 from './audio/4.mp3';\r\nimport song4 from './audio/5.mp3';\r\nimport song5 from './audio/6.mp3';\r\nimport song6 from './audio/7.m4a';\r\nimport song7 from './audio/8.mp3';\r\nimport song8 from './audio/9.mp3';\r\nimport song9 from './audio/10.mp3';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n       this.logout = this.logout.bind(this);\r\n        this.select = this.select.bind(this);\r\n        this.state = {\r\n            song : null,\r\n            click : 0,\r\n            menu : 'Home',\r\n            artist: ''\r\n\r\n        }\r\n        this.artist_songs = []\r\n        this.songs = [\r\n            {song_name: 'Adada Mazhaida',   song_artist : 'Yuvan Shankar Raja', song_data: song0},\r\n            {song_name: 'En Kadhal Solla',  song_artist : 'Yuvan Shankar Raja', song_data: song1},\r\n            {song_name: 'Poongatre',        song_artist : 'Yuvan Shankar Raja', song_data: song2},\r\n            {song_name: 'Suthudhe Bhoomi',  song_artist : 'Yuvan Shankar Raja',            song_data: song3},\r\n            {song_name: 'Thuli Thuli',      song_artist : 'Yuvan Shankar Raja',            song_data: song4},\r\n            {song_name: 'Yedho Ondru',      song_artist : 'Yuvan Shankar Raja',            song_data: song5},\r\n            {song_name: 'Chumma Kizhi',      song_artist : 'Anirudh',            song_data: song6},\r\n            {song_name: 'Nenjae Yezhu',      song_artist : 'A.R.Rahman',            song_data: song7},\r\n            {song_name: 'Ey Sandakaara',      song_artist : 'Santhosh Narayanan',            song_data: song8},\r\n            {song_name: 'Blood Bath',      song_artist : 'G.V.Prakash',            song_data: song9},\r\n        ]\r\n\r\n    } \r\n\r\n    componentDidMount(){\r\n        document.title = \"Musify\";\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then( data => data.json())\r\n        .then( users => console.log(users));\r\n      }\r\n\r\n    logout() {\r\n        firebase.auth().signOut();\r\n    }\r\n\r\n    show(item) {\r\n        if(!this.state.click)\r\n        {\r\n            this.setState({click:1});\r\n        }else{\r\n            this.setState({click:0});\r\n        }\r\n        this.artist_songs = []\r\n       \r\n        this.songs.map((value,index) => {\r\n            if(value.song_artist == item)\r\n                this.artist_songs.push(value);    \r\n        })\r\n        console.log(this.artist_songs)\r\n    }\r\n\r\n    select(item){\r\n        this.setState({menu:item});\r\n        // console.log(this.state.menu);\r\n            \r\n        \r\n    }\r\n\r\n    render() {\r\n     \r\n        var unique = [];\r\n        var distinct = [];\r\n            for( let i = 0; i < this.songs.length; i++ ){\r\n                if( !unique[this.songs[i].song_artist]){\r\n                  distinct.push(this.songs[i].song_artist);\r\n                  unique[this.songs[i].song_artist] = 1;\r\n                }\r\n              }\r\n            \r\n            if(this.state.menu == \"Home\")\r\n            {\r\n            return (\r\n            <div>\r\n                <div>\r\n                            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                            <Navbar.Brand onClick={() => {this.select('Home')}}>Musify</Navbar.Brand>\r\n                            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                                <Nav className=\"mr-auto\">\r\n                                <Nav.Link onClick={() => {this.select('Home')}}>Home</Nav.Link>\r\n                                <Nav.Link onClick={() => {this.select('Artist')}}>Artists</Nav.Link>\r\n                                </Nav>\r\n                                <Nav>\r\n                                <Nav.Link onClick={this.logout}>Logout</Nav.Link>\r\n                                </Nav>\r\n                            </Navbar.Collapse>\r\n                            </Navbar>\r\n                </div>    \r\n                <div className=\"artist-page\">\r\n                    <h2 className=\"text-left\">Home</h2>   \r\n                                {this.songs.map((value,index) => {\r\n                                        return (\r\n                                            <SongTile \r\n                                                        song_name={value.song_name} \r\n                                                        song_artist={value.song_artist}\r\n                                                        song_data={value.song_data} \r\n                                                        id={index} />    \r\n                                            )    \r\n                                    })\r\n                                }\r\n                </div>\r\n                </div>\r\n        )\r\n    }\r\n    else if(this.state.click == 0)\r\n         return(\r\n            <div>\r\n            <div>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                            <Navbar.Brand onClick={() => {this.select('Home')}}>Musify</Navbar.Brand>\r\n                            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                                <Nav className=\"mr-auto\">\r\n                                <Nav.Link onClick={() => {this.select('Home')}}>Home</Nav.Link>\r\n                                <Nav.Link onClick={() => {this.select('Artist')}}>Artists</Nav.Link>\r\n                                </Nav>\r\n                                <Nav>\r\n                                <Nav.Link onClick={this.logout}>Logout</Nav.Link>\r\n                                </Nav>\r\n                            </Navbar.Collapse>\r\n                            </Navbar>\r\n            </div>\r\n\r\n            <div className=\"artist-page\">\r\n                    <h2 className=\"\">Artists</h2>   \r\n                                {distinct.map((value,index) => {\r\n                                        return (\r\n                                            <div className=\"row tile\">   \r\n                                                 <Col xs=\"12\" lg=\"6\">   \r\n                                                    <button className=\"artist btn btn-link\" \r\n                                                    onClick ={() => {this.show(value)}}>\r\n                                                        {value}</button>\r\n                                                    \r\n                                                </Col>\r\n                                            </div>    \r\n                                            )\r\n                                    }\r\n                                )}\r\n                    <div className=\"p-3\">\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n         )\r\n         else\r\n         {\r\n            return(\r\n                <div>\r\n                <div>\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                            <Navbar.Brand onClick={() => {this.select('Home')}}>Musify</Navbar.Brand>\r\n                            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                                <Nav className=\"mr-auto\">\r\n                                <Nav.Link onClick={() => {this.select('Home')}}>Home</Nav.Link>\r\n                                <Nav.Link onClick={() => {this.select('Artist')}}>Artists</Nav.Link>\r\n                                </Nav>\r\n                                <Nav>\r\n                                <Nav.Link onClick={this.logout}>Logout</Nav.Link>\r\n                                </Nav>\r\n                            </Navbar.Collapse>\r\n                            </Navbar>\r\n                </div>\r\n    \r\n                <div className=\"artist-page\">\r\n                        <h2 className=\"\">Artists</h2>   \r\n                                    {distinct.map((value,index) => {\r\n                                            return (\r\n                                                <div className=\"row tile\">   \r\n                                                    <Col xs=\"12\" lg=\"2\">   \r\n                                                        <button className=\"artist btn btn-link\" \r\n                                                        onClick ={() => {this.show(value)}}>\r\n                                                            {value}</button>\r\n                                                        \r\n                                                    </Col>\r\n    \r\n                                                    <Col xs=\"12\" lg=\"10\">   \r\n                                                    {this.artist_songs.map((val,ind) => {\r\n                                                        if(value == val.song_artist)\r\n                                                            return (\r\n                                                                <SongTile \r\n                                                                    song_name={val.song_name} \r\n                                                                    song_artist={val.song_artist}\r\n                                                                    song_data={val.song_data} \r\n                                                                    id={ind} />    \r\n                                                        \r\n                                                                )    \r\n                                                        })\r\n                                                    }\r\n                                                    </Col>\r\n                                                </div>    \r\n                                                )\r\n                                        }\r\n                                    )}\r\n                        <div className=\"p-3\">\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n             )\r\n         }\r\n    }\r\n\r\n    }\r\nexport default Home;       ","import React, { Component } from 'react'\r\nimport firebase from './config/fire'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\r\nimport {Input, Form, FormGroup} from 'reactstrap';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.login = this.login.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.signup = this.signup.bind(this);\r\n    this.state = { signedin: false}\r\n  }\r\n  \r\n  uiConfig = {\r\n    signInFlow: \"popup\",\r\n    signInOptions: [\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n      firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n    ],\r\n    callbacks: {\r\n      signInSuccess: () => false\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    document.title = \"Musify\";\r\n  }\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  login(e) {\r\n    e.preventDefault();\r\n    const email = document.querySelector('#email').value;\r\n    const pass = document.querySelector('#pass').value;\r\n    console.log(email,pass)\r\n    firebase.auth().signInWithEmailAndPassword(email, pass).then((u)=>{\r\n    }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  signup(e){\r\n    e.preventDefault();\r\n    const email = document.querySelector('#email').value;\r\n    const pass = document.querySelector('#pass').value;\r\n    firebase.auth().createUserWithEmailAndPassword(email, pass).then((u)=>{\r\n    }).then((u)=>{console.log(u)})\r\n    .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\nrender(){\r\n  return (\r\n    <Form className=\"login-form\">\r\n      <h3 className=\"text-center\">Login Page</h3>\r\n      <FormGroup>\r\n        <label>Email ID</label>\r\n        <Input type='email' placeholder=\"Email ID\" id=\"email\"></Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <label>Password</label>\r\n        <Input type='password' placeholder=\"Password\" id=\"pass\"></Input>\r\n      </FormGroup>\r\n\r\n\r\n        <button className=\"btn-lg btn-dark btn-block\" onClick={this.login}>Login</button>\r\n        <div className=\"text-center p-3\">- or connect with -</div>\r\n            <StyledFirebaseAuth\r\n            uiConfig={this.uiConfig}\r\n            firebaseAuth = {firebase.auth()}\r\n            />       \r\n        <div className=\"text-center p-3\">\r\n          <button className=\"btn btn-link\" onClick={this.signup}>Signup</button>\r\n        </div>\r\n    </Form>\r\n  );\r\n }\r\n} \r\n\r\nexport default Login;","import React , {Component} from 'react';\nimport './App.css';\nimport firebase from './config/fire';\nimport Home from './Home';\nimport Login from './Login';\n\nclass App extends Component\n{\n  constructor() {\n    super();\n    this.state = ({\n      user: null,\n    });\n    this.authListener = this.authListener.bind(this);\n  }\n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    firebase.auth().onAuthStateChanged((user) => {\n      console.log(user);\n      if (user) {\n        this.setState({ user });\n        localStorage.setItem('user', user.uid);\n      } else {\n        this.setState({ user: null });\n        localStorage.removeItem('user');\n      }\n    });\n  }\n  render() {\n    return (\n      <div>{this.state.user ? ( <Home/>) : (<Login />)}</div>\n      //<div><Login /></div>\n    )};\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}